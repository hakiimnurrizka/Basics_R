version
version
###Basics of R### --> Comment, start with "#"
15+15
"Hello world!"
Hello world
12/8
##Variable
#Store values which can be a numeric or string
name = "hakiim"
age_string = "23"
age_numeric = 23
#We can call the stored values by the assigned name
name
age_numeric
print(age_string)
#Print function can also be used in logical functions such as loops/conditional
for(i in 1:10){
print(i)
}
while(x < 10){
x = 0
print(x)
x = x+1
}
x = 0
while(x < 10){
print(x)
x = x+1
}
#Using variable, we can also do some manipulations such as math operation for numeric or writing specific string
age + x
#Using variable, we can also do some manipulations such as math operation for numeric or writing specific string
age_numeric + x
age_numeric / x
paste("my name is ", name)
paste("my name is", name)
paste(name, age_string)
##Data types
#For basic data types we can categorized into : numeric, integer, complex, string, logical
# numeric
a = 10.5
class(a) #Function class is to check the "type of the data"
# integer
b = 1000L
class(b)
# complex
c = 9i + 3
class(c)
# character/string
r = "R is exciting"
class(r)
# logical/boolean
t = TRUE
class(t)
#The first 3 data types above are considered as "numbers"
#The first 3 data types above are considered as "numbers"
#These numbers types are valid to be used in mathematical operation
a+b
a*c
#Converting between these numbers types is also possible using as._() function
as.integer(a)
##Data types
#For basic data types we can categorized into : numeric, integer, complex, string, logical
# numeric
a = 10.7
#Converting between these numbers types is also possible using as._() function
as.integer(a) #Rounding down
##Data types
#For basic data types we can categorized into : numeric, integer, complex, string, logical
# numeric
a = 10.7
class(a) #Function class is to check the "type of the data"
# integer
b = 900L
class(b)
# complex
c = 13i + 3
class(c)
# character/string
r = "R is exciting"
class(r)
# logical/boolean
t = TRUE
class(t)
#The first 3 data types above are considered as "numbers"
#These numbers types are valid to be used in mathematical operation
a+b
a*c
#Some of the basic mathematical operations
a+b
a-c
b/c
a*c
##Data types
#For basic data types we can categorized into : numeric, integer, complex, string, logical
# numeric
a = -10.7
abs(a)
sqrt(b)
floor(a)
###Basics of R### --> Comment, start with "#"
15+15 #Syntax numerical
###Basics of R### --> Comment, start with "#"
15+15 #Syntax numerical
#15+15
1345*89
#15+15
1345*89
15+15
"Hello world!" #Syntax string/character
"Okay here we go, 1, 2, 3...."
"hello world"
"hello world"
hello world
"umur saya 17"
"17"
"17"+17
17+17
##Variable
#Store values which can be a numeric or string
name = "hakiim"
#We can call the stored values by the assigned name or using print() function
name
##Variable
#Store values which can be a numeric or string
name = "hakiim is my name"
#We can call the stored values by the assigned name or using print() function
name
age_string -> "23"
print(age_string)
1
2
3
#Print function can also be used in logical functions such as loops/conditional
for(i in 1:10){
print(i)
}
x = 0
while(x < 10){
print(x)
x = x+1
}
#Using variable, we can also do some manipulations such as math operation for numeric or writing specific string
age_numeric + x
age_numeric / x
##Variable
#Store values which can be a numeric or string
name = "hakiim"
paste("my name is", name)
paste(name, age_string)
#Converting between these numbers types is also possible using as._() function
as.integer(a) #Rounding down
##Data types
#For basic data types we can categorized into : numeric, integer, complex, string, logical
# numeric
a = -10.7
#Converting between these numbers types is also possible using as._() function
a
as.integer(a) #Rounding down
as.complex(a)
abs(a)
#Converting between these numbers types is also possible using as._() function
a
b
sqrt(b)
ceiling(a)
floor(a)
